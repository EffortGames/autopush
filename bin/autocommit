#!/usr/bin/env bash
#
# Stages the local directory and commits using an autogenerated message.
#
set -e -o pipefail

git add .

files=$(git diff --name-only --cached)
files_count=$(echo "${files}" | wc -l)
if [ "${files_count}" == "0" ]; then
  echo "Nothing to commit"
  exit 0
fi

message="Updated $(echo "${files}" | paste -s -d", ")"

# if there is a large amount of files, use a shorter message
if [ "${files_count}" -gt "2" ]; then
  directories=$(echo "${files}" | xargs -I {} dirname {} | sort | uniq -c | sort -nr | awk '{print $2}')
  directories_count=$(echo "${directories}" | wc -l)
  if [ "${directories_count}" -gt "2" ]; then
      message="Updated multiple files"
  else
      message="Updated $(echo "${directories}/" | paste -s -d"/, ")"
  fi
fi

# replace /./ with / (if any)
message=$(echo "${message}" | sed 's#/\.\/#/#g')

# prefix message with identifier of feature/ or bugfix/ branches
feature=$(_egfeature)
if [ -n "${feature}" ]; then
  message="[${feature}] ${message}"
fi

git commit --message "${message}"
