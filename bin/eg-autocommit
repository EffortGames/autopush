#!/usr/bin/env bash
#
# Stages the local directory and commits it with an autogenerated message.
# Pushes the commit to the remote repository.
#
set -e -o pipefail

git add .

files=$(git diff --name-only --cached)
files_count=$(echo "${files}" | wc -l)
if [ "${files_count}" == "0" ]; then
    echo "Nothing to commit"
    exit 0
fi

message="Updated $(echo -e "${files}" | paste -s -d", ")"
# if file is greater than 2, use "Multiple files changed" message
if [ "${files_count}" -gt "2" ]; then
    message="Updated multiple files"
fi

# if the branch is in the format of "feature/<name>" or "bugfix/<name>"
# then prefix the commit message with the <name> part
branch=$(git rev-parse --abbrev-ref HEAD)
if [[ "${branch}" =~ ^(feature|bugfix)\/(.*) ]]; then
    prefix="[${BASH_REMATCH[2]}]"
    message="${prefix} ${message}"
fi

git commit --message "${message}"
